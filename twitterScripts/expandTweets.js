

// **************************
// ****** DEPENDENCIES ******
// **************************

var proc     = require('../util/process'); 
var database = require('../api/database'); 
var fs       = require('fs');
var _        = require('lodash');
var twitter  = require('../api/twitterApi');

// *********************
// ****** PROGRAM ******
// *********************

var tweetsToExpand = [ 
  '399756894098583552',
  '406740861402513408',
  '411930421145128960',
  '388856429844901888',
  '388731852020023296',
  '388875184968855552',
  '389577971532443648',
  '389406738681970688',
  '388080314150440960',
  '389595163124711424',
  '391606408405209089',
  '392650394465472512',
  '400030770489614337',
  '399950310443335680',
  '399762896223469568',
  '392773439129681920',
  '399957072793436160',
  '399735229105311744',
  '400840301935620097',
  '394894910228557824',
  '395036327391268864',
  '404605402060685312',
  '413402335143288832',
  '414419186858094592',
  '389577992709873664',
  '390292076463923200',
  '389987857835626496',
  '389944864689098752',
  '389784043367067648',
  '391291944682680321',
  '392819478616354816',
  '392818178730254336',
  '394114287503171584',
  '393987387506057216',
  '390230026685513728',
  '388916528017854464',
  '388305869756456960',
  '388343665090756608',
  '388031141925515264',
  '391326865560190976',
  '392519292446851072',
  '392102868922019840',
  '391360858623729664',
  '392777612265000960',
  '393115425195585536',
  '393524319533268992',
  '393236859461312512',
  '400045084642914304',
  '399804808179105793',
  '399762201252478976', 

];

// tweets with direct mentions
tweetsToExpand = [
  "391360858623729664",
  "404398543990820864",
  "412704735100420096",
  "412331497161752577",
  "412005092913475585",
  "414581403847000064",
  "428990485936353280",
  "431626916526055424",
  "431473811293478912",
  "428479719672016896",
  "432589718317170688",
  "432762672908488704",
  "432593558856822784",
  "436537272545325056",
  "436681039722082304",
];

// random tweets
tweetsToExpand = [
  '390351932851642368',
  '390796877400379392',
  '390543313570246656',
  '390527503485665280',
  '390514031918055425',
  '390292076463923200',
  '390256763515461635',
  '390243878852636672',
  '390143222464253952',
  '389871442533175296',
  '389447905469145088',
  '394630088940978176',
  '399930326824153088',
  '390314852310208512',
  '390285942059053056',
  '390096653085966336',
  '389987857835626496',
  '389965488186339328',
  '389953795297263617',
  '389944864689098752',
  '389725386549891072',
  '389450345287393280',
  '389234421398003713',
  '390110942739955712',
  '389050010400468992',
  '388717532045012992',
  '388070776605126656',
  '391291944682680321',
  '391290581118222336',
  '392819478616354816',
  '393088582615056384',
  '392818178730254336',
  '394452483000373248',
  '394114287503171584',
  '393516580371718144',
  '393987387506057216',
  '399955347256774657',
  '414245965562773505',
  '414544851666235393',
  '414479355562459137',
  '414476562583793664',
  '389015761739874305',
  '390840720401395712',
  '390704821646655488',
  '390687132312162304',
  '390558448334929921',
  '390457946679025664',
  '390286834598547458',
  '390230026685513728',
  '389821431078739970',
  '389388979239260160',
  '389364139409547264',
  '389226233835560960',
  '390451329472401408',
  '390227194598789120',
  '389906059877302272',
  '389247198103224320',
  '388711313574465536',
  '388706501302296576',
  '388343665090756608',
  '388274919416397825',
  '388212624015360000',
  '388499227124723712',
  '388142104633159681',
  '388111970123390976',
  '388090186988781568',
  '388009417876045824',
  '391277373699526658',
  '391284163460202496',
  '391276466790342656',
  '391065021318320128',
  '390939309399744512',
  '390900915227885569',
  '390878694589620224',
  '391326865560190976',
  '392519292446851072',
  '392504901428736000',
  '392368087275933697',
  '392456890896355328',
  '392264574658826240',
  '391650693754675200',
  '392264740967178242',
  '391963848506228736',
  '391656904256393216',
  '392496081751539712',
  '392327613248978944',
  '392230332281663488',
  '391905837071228928',
  '391630440244580352',
  '392409914632851456',
  '391360858623729664',
  '393145650012905472',
  '392907345602543616',
  '392799862917709825',
  '392676011155804160',
  '392792537477705728',
  '392742891766173696',
  '392765507902144512',
  '392660506051231744',
  '394655092303233024',
  '394501841238507520',
  '394539848024875008',
  '394205947452993536',
  '394311074935480320',
  '394241646042152961',
  '394278612204916736',
  '393499188602093568',
  '393474690049933312',
  '393470768929329152',
  '393458603496964096',
  '393448198402244608',
  '393447896432922627',
  '393402171573534720',
  '393385310333067264',
  '393236859461312512',
  '394519534218248192',
  '393320143561834497',
  '394958172206952448',
  '395143943760777217',
  '414266593334804480',
  '393813941140201472',
  '399870066700730369',
  '414557820714242049',
  '414498253657608192',
  '414489147043508224',
  '414487245567950848',
  '414466680489000961',
  '414463825581445121',
  '414439369814974464',
  '414504828099117056',
  '414489432113561600',
  '414488907569324032',
  '414444436463292417',
  '414619707191611392',
  '414716684289601536',
  '414763971888308224',
  '414798082841534465',
  '414766553738272768',
  '415847903174066176',
  '395047857603878913',
  '417449596567437313',
  '417479264041058306',
  '437292752817369089',
  '393591975544246272',
  '394303042474233857',
  '393815719303200768',
  '393608626411012097',
  '394844154565373953',
  '394922249209135104',
  '394868507839442944',
  '400026868360810497',
  '400015830278483969',
  '399964151428026368',
  '399959763993518080',
  '400078007123337216',
  '399996056613978112',
  '400050251358560256',
  '400045084642914304',
  '399976445138579456',
  '399960380648476673',
  '399927315855319041',
  '399950414696570880',
  '399907850572824576',
  '399907515150135297',
  '399905771053670400',
  '399897714177343488',
  '399864001985007616',
  '399804808179105793',
  '399787953796296704',
  '399784130910908416',
  '399781711598219264',
  '399780581015183360',
  '399778916522397697',
  '399769268356530176',
  '399769102291849217',
  '399767207481450496',
  '399765936020135936',
  '399763068152201216',
  '399762742372216832',
  '399761308981424128',
  '399760609035948032',
  '399756920950890496',
  '399729651888951296',
  '399729416416534528',
  '399722170836066305',
  '401553049241403392',
  '400485113764794368',
  '404491660400156673',
  '404124771086237696',
  '404105352301391872',
  '403927944554618880',
  '408429882239352832',
  '408726136634359809',
  '408644764939325440',
  '408318497606078464',
  '408268365686640640',
  '408304644742344705',
  '408769492182138880',
  '408699984423292928',
  '408243323137449984'
];

var expandConvo = function(tweets) {

    var toFile = './private/convo-tweets-' + new Date().toJSON().replace(/:|-/g, '').replace('.', '') + '.json';

    _.each(tweets, function(tweet) {

      twitter.trackConversionBack(tweet, 3, function(err2, convo) {
        if (err2) { proc.bail('Convo tracking failed', err2); }

        _.each(convo, function(t) {
          t.tags.push('convo');
          t.tags.push('convo-' + tweet.id);
        });

        fs.appendFile(toFile, JSON.stringify(convo) + "\n", function(err) {
          if (err) { proc.bail('Failed to save file', err); }
        });

      });

    });

};

var expandUser = function(tweets) {

  var toFile = './private/user-tweets-' + new Date().toJSON().replace(/:|-/g, '').replace('.', '') + '.json';

  _.each(tweets, function(tweet) {

    twitter.userTimeline(tweet.user.id, null, tweet.id, function(err2, backwards) {
      if (err2) { return console.log('Backward tracking failed ' + tweet.user.id, err2); }

      _.each(backwards, function(t) {
        t.tags.push('user');
        t.tags.push('user-' + tweet.user.id);
        // screen name not set on result, so add it
        t.user.screen_name = tweet.user.screen_name;
      });

      fs.appendFile(toFile, JSON.stringify(backwards) + "\n", function(err) {
        if (err) { proc.bail('Failed to save file', err); }
      });

    });

    twitter.userTimeline(tweet.user.id, tweet.id, null, function(err2, forwards) {
      if (err2) { return console.log('Forward tracking failed ' + tweet.user.id, err2); }

      _.each(forwards, function(t) {
        t.tags.push('user');
        t.tags.push('user-' + tweet.user.id);
        // screen name not set on result, so add it
        t.user.screen_name = tweet.user.screen_name;
      });

      fs.appendFile(toFile, JSON.stringify(forwards) + "\n", function(err) {
        if (err) { proc.bail('Failed to save file', err); }
      });

    });

  });

};

database.runWithConn(function() {

  database.findTweets({ "id": { "$in": tweetsToExpand } }, function(err, tweets) {
    if (err) { proc.bail('Failed to find tweets', err); }

    expandUser(tweets);
    expandConvo(tweets);

  });

});
